name: main

on: [push]

jobs:
  main:
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            webRTC-signal:
              - 'packages/webRTC-signal/**'

      - run: bun install --frozen-lockfile

      - run: bunx vite build --base /bongbong/
        working-directory: packages/app

      - run: cp packages/app/dist/index.html packages/app/dist/404.html

      - run: bunx vite build --base /bongbong/demo/webRTC-minimal --outDir ../../app/dist/demo/webRTC-minimal --minify false
        working-directory: packages/webRTC-demo/minimal

      - run: bunx vite build --base /bongbong/demo/webRTC-multi-guest --outDir ../../app/dist/demo/webRTC-multi-guest --minify false
        working-directory: packages/webRTC-demo/multi-guest

      # - run: bunx wrangler pages deploy packages/app/dist --project-name=bongbong --branch=main
      #   if: github.ref == 'refs/heads/main'
      #   env:
      #     CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - uses: actions/upload-pages-artifact@v3
        with:
          path: packages/app/dist

      - uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'

      - run: bunx wrangler deploy
        if: steps.changes.outputs.webRTC-signal == 'true' && github.ref == 'refs/heads/main'
        working-directory: packages/webRTC-signal
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # - run: bun test

      # - run: bunx biome check .

      # - run: bunx tsc --noEmit
